trigger:
- main  # Adjust this to your default branch

pool:
  name: 'Default'

variables:
  buildConfiguration: 'Release'
  azureSubscription: 'Visual Studio Enterprise Subscription â€“ MPN(61111058-5a97-4680-b52e-9ab2dcc700f7)'
  appName: 'lonwebapp'
  resourceGroupName: 'az400'
  zipFileName: 'docs_$(Build.BuildId).zip'
  zipFilePath: '$(Build.ArtifactStagingDirectory)/$(zipFileName)'
  storageAccountName: 'lomexceltrigger '
  containerName: 'documentation'
  blobName: '$(zipFileName)'  

steps:
- script: |
    dotnet restore WebService/WebService.sln
  displayName: 'Restore NuGet Packages'

- script: |
    dotnet build WebService/WebService.sln --configuration $(buildConfiguration)
  displayName: 'Build Solution'

- script: |
    dotnet test WebService/WebService.sln --configuration $(buildConfiguration) --no-build --verbosity normal
  displayName: 'Run Tests'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish'

- script: |
    docfx WebService/docfx.json
  displayName: 'Generate Documentation'
  env:
    PATH: $(PATH):$(HOME)/.dotnet/tools
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'WebService/_site'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: $(zipFilePath)
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/publish/WebService.zip'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: AzureWebApp@1
  inputs:
    azureSubscription: $(azureSubscription)
    appName: $(appName)
    package: '$(Build.ArtifactStagingDirectory)/publish/WebService.zip'
    resourceGroupName: $(resourceGroupName)
    appType: 'webAppLinux'

- task: AzureCLI@2
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az storage blob upload \
        --account-name $(storageAccountName) \
        --container-name $(containerName) \
        --name $(blobName) \
        --file $(zipFilePath) \
        --auth-mode key
  displayName: 'Upload File to Azure Blob Storage'

- task: PowerShell@2
  inputs:
    targetType: 'filePath'
    filePath: '$(Build.SourcesDirectory)/DevOps/SendEmail.ps1'
    failOnStderr: false
  displayName: 'Send Email with Attachment'